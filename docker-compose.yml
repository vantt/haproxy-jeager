version: '3.7'

networks:
    front-proxy:
        external: true
        name: https-proxy

services:
    haproxy: # a1 load balanced
        image: spoa-jeager
        networks:
            front-proxy: {}
        volumes:
          - ./etc/haproxy:/usr/local/etc/haproxy

   
    whoami_a1: # a1 load balanced
        image: containous/whoami:v1.5.0
        environment:
          WHOAMI_NAME: whoami_a
        networks:
            front-proxy: {}
        command: --port 12345    


    #########################################################
    # Jaeger AGENT Ports 
    #
    # 16686 HTTP  The UI port
    #
    # 6831	UDP	  accept jaeger.thrift in compact Thrift protocol used by most current Jaeger clients
    # 6832	UDP	  accept jaeger.thrift in binary Thrift protocol used by Node.js Jaeger client (because thriftrw npm package does not support compact protocol)
    # 5778	HTTP	serve configs, sampling strategies
    # 5775	UDP	  accept zipkin.thrift in compact Thrift protocol (deprecated; only used by very old Jaeger clients, circa 2016)
    # 14271	HTTP	Healthcheck at / and metrics at /metrics
    #
    #
    # Jaeger COLLECTOR Ports
    #
    # 14267	TChannel  used by jaeger-agent to send spans in jaeger.thrift format
    # 14250	gRPC	    used by jaeger-agent to send spans in model.proto format
    # 14268	HTTP	    can accept spans directly from clients in jaeger.thrift format over binary thrift protocol
    # 9411	HTTP	    can accept Zipkin spans in Thrift, JSON and Proto (disabled by default)
    # 14269	HTTP	    Healthcheck at / and metrics at /metrics
    #
    ####################################################################
    jaeger:
        image: jaegertracing/all-in-one:1.7.0
        networks:
            front-proxy:  {}
        # ports:
        #     - 16686:16686 # The UI port, traefik will do routing
        labels:
            # https://docs.traefik.io/reference/dynamic-configuration/docker/
            # https://docs.traefik.io/routing/providers/docker/

            - traefik.enable=true # expose this container through traefik
            - traefik.http.services.jaeger.loadbalancer.server.port=16686

            #  http route redirect
            #- traefik.http.routers.jaeger.entrypoints=http
            #- traefik.http.routers.jaeger.rule=Host(`jaeger.dev.mz`)
            #- traefik.http.routers.jaeger.middlewares=force-https@file

            # http server
            #- traefik.http.routers.jaeger.service=jaeger
            #- traefik.http.routers.jaeger.tls=false
            #- traefik.http.routers.jaeger.tls.certresolver=false

            # https route
            - traefik.http.routers.jaeger_https.entrypoints=https
            - traefik.http.routers.jaeger_https.rule=Host(`jaeger.dev.mz`)
            - traefik.http.routers.jaeger_https.tls=true
            - traefik.http.routers.jaeger_https.service=jaeger